import React, { useState } from 'react';
import { useDispatch } from 'react-redux';
import { useNavigate } from 'react-router-dom'; // Import useNavigate to handle navigation
import { AppDispatch } from '../store';
import { addUser } from '../slices/userSlice';
import { Link } from 'react-router-dom';
import './UserForm.css';

// Define the UserForm component using React Functional Component (React.FC) type
const UserForm: React.FC = () => {
  // Local state to manage form input values
  const [firstName, setFirstName] = useState('');
  const [lastName, setLastName] = useState('');
  const [address, setAddress] = useState('');
  const [email, setEmail] = useState('');
  const [location, setLocation] = useState('');

  // Initialize dispatch from useDispatch hook to dispatch actions to the Redux store
  const dispatch = useDispatch<AppDispatch>();
  // Initialize navigate from useNavigate hook to handle navigation
  const navigate = useNavigate();

  // Handle form submission
  const handleSubmit = (e: React.FormEvent) => {
    // Prevent default form submission behavior
    e.preventDefault();
    // Dispatch addUser action with form data, id is set as an empty string since it's generated by the backend
    dispatch(addUser({ id: '', firstName, lastName, address, email, location }))
      .unwrap() // Unwrap the promise to handle resolved or rejected state
      .then(() => {
        // Clear form inputs after successful submission
        setFirstName('');
        setLastName('');
        setAddress('');
        setEmail('');
        setLocation('');
        // Navigate to the user list page
        navigate('/list');
      });
  };

  return (
    <div>
      {/* Form element with onSubmit event handler */}
      <form onSubmit={handleSubmit}>
        {/* Input for First Name */}
        <input
          type="text"
          placeholder="First Name"
          value={firstName}
          onChange={(e) => setFirstName(e.target.value)}
          required
        />
        {/* Input for Last Name */}
        <input
          type="text"
          placeholder="Last Name"
          value={lastName}
          onChange={(e) => setLastName(e.target.value)}
          required
        />
        {/* Input for Address */}
        <input
          type="text"
          placeholder="Address"
          value={address}
          onChange={(e) => setAddress(e.target.value)}
          required
        />
        {/* Input for Email */}
        <input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        />
        {/* Input for Location */}
        <input
          type="text"
          placeholder="Location"
          value={location}
          onChange={(e) => setLocation(e.target.value)}
          required
        />
        {/* Submit button for the form */}
        <button type="submit">Add User</button>
      </form>
      {/* Link to navigate to the user list page */}
      <Link to="/list">Go to User List</Link>
    </div>
  );
};

// Export the UserForm component as the default export
export default UserForm;
